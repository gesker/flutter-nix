

if ! has nix_direnv_version || ! nix_direnv_version 3.0.6; then
  source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/3.0.6/direnvrc" "sha256-RYcUJaRMf8oF5LznDrlCXbkOQrywm0HDv1VjYGaJGdM="
fi

# Uncomment next line to manually reload environment instead of auto reloading environment
#nix_direnv_manual_reload

watch_file flake.nix
watch_file flake.lock
use flake


# Echo Environment Variables
echo
echo "DevShell Environment (Nix Flake) Initiated!"
echo
echo "PROJECT_ROOT is $PROJECT_ROOT"
echo
export PATH="$CMAKE_ROOT/bin:$PATH:$PUB_CACHE/bin";
echo "PATH is $PATH"
echo
echo "zshell (zsh) related..."
echo
echo "SHELL is $SHELL"
echo "DIRENV_WARN_TIMEOUT is $DIRENV_WARN_TIMEOUT"
echo
echo "emulator related..."
echo
echo "QT_QPA_PLATFORM is $QT_QPA_PLATFORM"
echo
echo "project related..."
echo
export PROJECT_ROOT="$(pwd)"
echo "PROJECT_ROOT is $PROJECT_ROOT"
export ANDROID_USER_HOME="$PROJECT_ROOT/.android"
export ANDROID_AVD_HOME="$ANDROID_USER_HOME/avd"
echo "ANDROID_USER_HOME is $ANDROID_USER_HOME"
echo "ANDROID_AVD_HOME is $ANDROID_AVD_HOME"
echo "ANDROID_NDK_ROOT is $ANDROID_NDK_ROOT"
echo "ANDROID_SDK_ROOT is $ANDROID_SDK_ROOT"
echo "CHROME_EXECUTABLE is $CHROME_EXECUTABLE"
echo "CMAKE_ROOT is $CMAKE_ROOT"
echo "DART_ROOT is $DART_ROOT"
echo "FLUTTER_ROOT is $FLUTTER_ROOT"
echo "GRADLE_HOME is $GRADLE_HOME"
echo "GRADLE_OPTS is $GRADLE_OPTS"
echo "JAVA_HOME is $JAVA_HOME"
echo "LANG is $LANG"
echo "LC_ALL is $LC_ALL"
echo "PUB_CACHE is $PUB_CACHE"
echo
mkdir -p "$GRADLE_HOME"
mkdir -p "$PUB_CACHE"
mkdir -p "$ANDROID_USER_HOME"
mkdir -p "$ANDROID_AVD_HOME"
echo
echo "'flutter create' related..."
echo "Note: 'flutter create' options are in './optionsFlutterCreate.nix' file"
echo
echo "FLUTTER_ORGANIZATION is $FLUTTER_ORGANIZATION"
echo "FLUTTER_PROJECT_NAME is $FLUTTER_PROJECT_NAME"
echo "FLUTTER_PROJECT_DESCRIPTION is $FLUTTER_PROJECT_DESCRIPTION"
echo "FLUTTER_PROJECT_FOLDER is $FLUTTER_PROJECT_FOLDER"
echo
if [ ! -d "$FLUTTER_PROJECT_FOLDER" ]; then
  echo "$FLUTTER_PROJECT_FOLDER does not exist."
  echo "running flutter create"
  flutter create --org "$FLUTTER_ORGANIZATION" --project-name "$FLUTTER_PROJECT_NAME" --description "$FLUTTER_PROJECT_DESCRIPTION" "$FLUTTER_PROJECT_FOLDER"
  echo
  else
    echo "flutter project folder '$FLUTTER_PROJECT_FOLDER' already exists. Skipping 'flutter create'"
    echo
fi
echo
flutter doctor
echo
cd $PROJECT_ROOT



